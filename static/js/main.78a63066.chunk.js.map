{"version":3,"sources":["components/Loader.js","components/Panel.js","components/Header.js","components/Timer.js","components/Container.js","App.js","serviceWorker.js","index.js","assets/alert.mp3"],"names":["canvas","ctx","cw","ch","start","timer","headerStyles","position","borderTopLeftRadius","borderTopRightRadius","height","display","alignItems","justifyContent","fontSize","fontWeight","color","Header","react_default","a","createElement","AppBar_default","style","Component","loaderStyle","Loader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","difference","progressSim","bind","assertThisInitialized","refs","width","getContext","x","y","r","step","clearRect","lineWidth","strokeStyle","beginPath","arc","stroke","isTimerPlayed","timerState","setState","initialSessionLength","sessionLength","Math","PI","toFixed","drawCircle","initialBreakLength","breakLength","ref","PureComponent","timerStyle","cursor","Timer","nextProps","floor","concat","Grid_default","container","direction","justify","onClick","toggleTimer","console","log","toggleSession","components_Loader","zIndex","displayTime","fabButtonStyles","minHeight","resetButtonStyle","marginTop","alert","Audio","soundfile","play","Panel","resetTimer","prop","minutes","_this2","setInterval","playAlert","clearInterval","_this3","className","item","sm","paddingBottom","Fab_default","addMinute","subtractMinute","components_Timer","toggleBreak","Button_default","variant","size","containerStyles","backgroundColor","borderRadius","boxShadow","Container","components_Header","components_Panel","appStyles","textAlign","flexDirection","App","components_Container","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.78a63066.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\n\nlet loaderStyle = {\n    position: 'absolute'\n}\n\nlet canvas, ctx, cw, ch, start;\n\nclass Loader extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            difference: 0\n        }\n        this.progressSim = this.progressSim.bind(this);\n    }\n\n    componentDidMount() {\n        canvas = this.refs.canvas;\n        canvas.width  = 166;\n        canvas.height = 166; \n        ctx = canvas.getContext(\"2d\");\n        cw = ctx.canvas.width;\n        ch = ctx.canvas.height;\n        start = 4.72;\n    }\n\n    componentWillReceiveProps() {\n        this.progressSim();\n    }\n\n    drawCircle(x, y, r, start, step) {\n        ctx.clearRect(0, 0, cw, ch);\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = \"#3f51b5\";\n        ctx.beginPath();\n        ctx.arc(x, y, r, start, step, false);\n        ctx.stroke();\n    }\n\n    progressSim() {\n        if (this.props.isTimerPlayed) {\n            if (this.props.timerState === \"Session\") { \n                this.setState({\n                    difference: ((((this.props.initialSessionLength * 60) - this.props.sessionLength) / (this.props.initialSessionLength * 60)) * Math.PI * 2 * 10).toFixed(2)\n                }, function() {\n                    this.drawCircle(83, 83, 65, start, this.state.difference / 10 + start)\n                    if (((((this.props.initialSessionLength * 60) - this.props.sessionLength) / (this.props.initialSessionLength * 60)) * Math.PI * 2 * 10) === this.props.initialSessionLength * 60) {\n                        this.setState({\n                            difference: 0\n                        }, this.drawCircle(83, 83, 65, start, 0 + start))\n                    }\n                })\n            } else {\n                this.setState({\n                    difference: ((((this.props.initialBreakLength * 60) - this.props.breakLength) / (this.props.initialBreakLength * 60)) * Math.PI * 2 * 10).toFixed(2)\n                }, function() {\n                    this.drawCircle(83, 83, 65, start, this.state.difference / 10 + start)\n                    if (((((this.props.initialBreakLength * 60) - this.props.breakLength) / (this.props.initialBreakLength * 60)) * Math.PI * 2 * 10) === this.props.initialBreakLength * 60) {\n                        this.setState({\n                            difference: 0\n                        }, this.drawCircle(83, 83, 65, start, 0 + start))\n                    }\n                })\n            }\n        } else {\n            if (this.state.difference !== 0) {\n                this.drawCircle(83, 83, 65, start, this.state.difference / 10 + start)\n            } else {\n                this.drawCircle(83, 83, 65, start, 0 + start)\n            }\n        }\n    }\n\n    render() {\n        return (\n            <canvas ref=\"canvas\" style={loaderStyle}></canvas>\n        )\n    }\n}\n\nexport default Loader;","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport Button from '@material-ui/core/Button';\nimport Timer from './Timer';\nimport soundfile from '../assets/alert.mp3';\n\nlet fabButtonStyles = {\n    height: '2.8rem',\n    width: '2.8rem',\n    minHeight: '2.8rem',\n    fontSize: '1.6rem',\n    fontWeight: '500'\n}\n\nlet resetButtonStyle = {\n    marginTop: '2rem',\n    fontSize: '1.4rem'\n}\n\nlet timer;\nlet alert = () => {\n    let audio = new Audio(soundfile);\n    audio.play();\n}\n\n\nclass Panel extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            breakLength: 300,\n            sessionLength: 1500,\n            initialSessionLength: 25,\n            initialBreakLength: 5,\n            isTimerPlayed: false,\n            timerState: 'Session'\n        }\n        this.toggleTimer = this.toggleTimer.bind(this);\n        this.toggleSession = this.toggleSession.bind(this);\n        this.resetTimer = this.resetTimer.bind(this);\n    }\n    addMinute(prop) {\n        if(this.state.isTimerPlayed === false) {\n            if (prop === 'break') {\n                this.setState({\n                    breakLength: (this.state.initialBreakLength) * 60 + 60,\n                    initialBreakLength: this.state.initialBreakLength + 1\n                }, this.resetTimer)\n            } else {\n                this.setState({\n                    sessionLength: (this.state.initialSessionLength) * 60 + 60,\n                    initialSessionLength: this.state.initialSessionLength + 1\n                }, this.resetTimer)\n            }\n        } else return\n    }\n\n    convertToSeconds(minutes) {\n        return minutes * 60;\n    }\n\n    subtractMinute(prop) {\n        if(this.state.isTimerPlayed === false) {\n            if (this.state.breakLength <= 0 && this.state.initialBreakLength <= 0 && prop === 'break') {\n                this.setState({\n                    breakLength: 0,\n                    initialBreakLength: 0\n                })\n            } \n            else if (this.state.sessionLength <= 0 && this.state.initialSessionLength <= 0 && prop === 'session') {\n                    this.setState({\n                        sessionLength: 0,\n                        initialSessionLength: 0\n                    }, this.resetTimer)\n            } else {\n                if (prop === 'break') {\n                    this.setState({\n                        breakLength: (this.state.initialBreakLength) * 60 - 60,\n                        initialBreakLength: this.state.initialBreakLength -1\n                    }, this.resetTimer)\n                } else {\n                    this.setState({\n                        sessionLength: (this.state.initialSessionLength) * 60 - 60,\n                        initialSessionLength: this.state.initialSessionLength - 1\n                    }, this.resetTimer)\n                }\n            }\n        } else return\n    }\n\n    toggleTimer(isTimerPlayed) {\n        this.setState({\n            isTimerPlayed: !isTimerPlayed\n        })\n    }\n\n    playAlert() {\n        if(this.state.sessionLength === 0 && this.state.timerState === 'Session') {\n            alert();\n        } else if (this.state.breakLength === 0 && this.state.timerState === 'Break') {\n            alert();\n        }\n    }\n\n    toggleSession() {\n        if(this.state.isTimerPlayed === false) {\n            timer = setInterval(() => {\n                if (this.state.sessionLength > 0) {\n                    this.setState({\n                        sessionLength: this.state.sessionLength - 1,\n                        timerState: 'Session'\n                    }, this.playAlert)\n                }\n                else if (this.state.sessionLength <= 0 && this.state.breakLength > 0) {\n                    this.setState({\n                        breakLength: this.state.breakLength - 1,\n                        timerState: 'Break'\n                    }, this.playAlert)\n                } else {\n                    this.setState({\n                        sessionLength: this.state.initialSessionLength * 60 ,\n                        breakLength: this.state.initialBreakLength * 60,\n                        timerState: 'Session'\n                    }, this.playAlert)\n                }\n        }, 1000)\n        } else {\n            clearInterval(timer);\n        }\n    }\n\n    resetTimer() {\n        this.setState({\n            isTimerPlayed: false,\n            timerState: 'Session',\n            sessionLength: this.state.initialSessionLength * 60,\n            breakLength: this.state.initialBreakLength * 60\n        })\n        clearInterval(timer);\n    }\n\n    render() {\n        return (\n            <Grid container justify='center' className=\"a\">\n                <Grid container alignItems='center' className=\"panel\">\n                    <Grid item sm>\n                        <Grid container direction='column'>\n                            <Grid item sm style={{paddingBottom: '1rem'}}>Break Length</Grid>\n                            <Grid item sm>\n                                <Grid container>\n                                    <Grid item sm><Fab style={fabButtonStyles} onClick={() => this.addMinute('break')}>+</Fab></Grid>\n                                    <Grid item sm>{this.state.initialBreakLength}</Grid>\n                                    <Grid item sm><Fab style={fabButtonStyles} onClick={() => this.subtractMinute('break')}>-</Fab></Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item sm >\n                        <Timer toggleTimer={this.toggleTimer} sessionLength={this.state.sessionLength} breakLength={this.state.breakLength} isTimerPlayed={this.state.isTimerPlayed} timerState={this.state.timerState} toggleSession={this.toggleSession} toggleBreak={this.toggleBreak} initialSessionLength={this.state.initialSessionLength} initialBreakLength={this.state.initialBreakLength}/>\n                    </Grid>\n                    <Grid item sm>\n                        <Grid container direction='column'>\n                            <Grid item sm style={{paddingBottom: '1rem'}}>Session Length</Grid>\n                            <Grid item sm>\n                                <Grid container>\n                                    <Grid item sm><Fab style={fabButtonStyles} onClick={() => this.addMinute('session')}>+</Fab></Grid>\n                                    <Grid item sm>{this.state.initialSessionLength}</Grid>\n                                    <Grid item sm><Fab style={fabButtonStyles} onClick={() => this.subtractMinute('session')}>-</Fab></Grid>\n                                </Grid>   \n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Button style={resetButtonStyle}variant=\"contained\" size=\"medium\" color=\"primary\" onClick={this.resetTimer}>reset</Button> \n            </Grid>\n        )\n    }\n}\n\nexport default Panel;","import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\n\nconst headerStyles = {\n    position: 'relative',\n    borderTopLeftRadius: '.5rem',\n    borderTopRightRadius: '.5rem',\n    height: '4rem',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '1.8rem',\n    fontWeight: '500',\n    color: 'white'\n}\n\nclass Header extends Component {\n    render() {\n        return (\n            <AppBar style={headerStyles}>Pomodoro Clock</AppBar>\n        )\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Loader from './Loader';\n\nlet timerStyle = {\n    width: '16.6rem',\n    height: '16.6rem',\n    color: '#3f51b5',\n    fontSize: '2.5rem',\n    cursor: 'pointer'\n}\n\nclass Timer extends Component {\n    \n    componentWillMount(){\n        this.setState({\n            sessionLength: this.props.sessionLength,\n            breakLength: this.props.breakLength\n        })\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            sessionLength: nextProps.sessionLength,\n            breakLength: nextProps.breakLength\n        })\n    }\n\n    displayTime(timerState) {\n        if (timerState === 'Session') {\n            if ( Math.floor(this.props.sessionLength % 60) < 10) {\n                return `${Math.floor(this.props.sessionLength / 60)}:0${Math.floor(this.props.sessionLength % 60)}`\n            } else {\n                return `${Math.floor(this.props.sessionLength / 60)}:${Math.floor(this.props.sessionLength % 60)}`\n            }\n        } else {\n            if ( Math.floor(this.props.breakLength % 60) < 10) {\n                return `${Math.floor(this.props.breakLength / 60)}:0${Math.floor(this.props.breakLength % 60)}`\n            } else {\n                return `${Math.floor(this.props.breakLength / 60)}:${Math.floor(this.props.breakLength % 60)}`\n            }\n        } \n    }\n\n    render() {\n        return (\n            <Grid container style={timerStyle} direction='column' justify='center' alignItems='center' onClick={() => {\n                this.props.toggleTimer(this.props.isTimerPlayed);\n                console.log(`Is timer running ? ${!this.props.isTimerPlayed}`);\n                this.props.toggleSession();\n            }}>\n                <Loader initialSessionLength={this.props.initialSessionLength} initialBreakLength={this.props.initialBreakLength} timerState={this.props.timerState} isTimerPlayed={this.props.isTimerPlayed} sessionLength={this.props.sessionLength} breakLength={this.props.breakLength}/>\n                <div style={{zIndex: 2}}>{this.props.timerState}</div>\n                <div style={{zIndex: 2}}>{this.displayTime(this.props.timerState)}</div>\n            </Grid>\n        )\n    }\n}\n\nexport default Timer;","import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Panel from '../components/Panel';\nimport Grid from '@material-ui/core/Grid';\n\nconst containerStyles = {\n    backgroundColor: 'white',\n    width: '50rem',\n    height: '33rem',\n    borderRadius: '.5rem',\n    boxShadow: '0 1rem 2rem rgba(0, 0, 0, 0.555)',\n    fontSize: '1.6rem',\n    fontWeight: '500',\n    color: '#282c34'\n}\n\nclass Container extends Component {\n\n    render() {\n        return (\n                <Grid style={containerStyles} container direction='column' justify=\"flex-start\">\n                    <Grid item>\n                        <Header />\n                    </Grid>\n                    <Grid item sm style={{marginTop: '4rem'}}>\n                        <Panel />\n                    </Grid>\n                </Grid>\n        );\n    }\n}\nexport default Container;","import React, { Component } from 'react';\nimport Container from './components/Container';\n\nconst appStyles = {\n  textAlign: 'center',\n  backgroundColor: '#282c34',\n  minHeight: '100vh',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center'\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div style={appStyles}>\n        <Container />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/alert.cbc0b859.mp3\";"],"sourceRoot":""}