{"version":3,"sources":["components/Loader.js","components/Panel.js","components/Header.js","utils/displayer.js","components/Timer.js","components/Container.js","App.js","serviceWorker.js","index.js","assets/alert.mp3"],"names":["canvas","ctx","cw","ch","start","timer","headerStyles","position","borderTopLeftRadius","borderTopRightRadius","height","display","alignItems","justifyContent","fontSize","fontWeight","color","Header","react_default","a","createElement","AppBar_default","style","Component","loaderStyle","Loader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","difference","React","createRef","progressSim","bind","assertThisInitialized","current","width","getContext","x","y","r","step","clearRect","lineWidth","strokeStyle","beginPath","arc","stroke","isTimerPlayed","timerState","setState","initialSessionLength","sessionLength","Math","PI","toFixed","drawCircle","initialBreakLength","breakLength","ref","PureComponent","displayer","time","floor","concat","timerStyle","cursor","Timer","Grid_default","container","direction","justify","onClick","toggleTimer","console","log","toggleSession","components_Loader","zIndex","displayTime","fabButtonStyles","minHeight","resetButtonStyle","marginTop","alert","Audio","soundfile","play","Panel","resetTimer","prop","_this2","setInterval","playAlert","clearInterval","_this3","className","item","sm","paddingBottom","Fab_default","addMinute","subtractMinute","components_Timer","toggleBreak","Button_default","variant","size","containerStyles","backgroundColor","borderRadius","boxShadow","Container","components_Header","components_Panel","appStyles","textAlign","flexDirection","App","components_Container","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7aa53429.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\nconst loaderStyle = {\r\n    position: 'absolute'\r\n}\r\n\r\nlet canvas, ctx, cw, ch, start;\r\n\r\nclass Loader extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            difference: 0\r\n        }\r\n        this.canvas = React.createRef()\r\n        this.progressSim = this.progressSim.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        canvas = this.canvas.current;\r\n        canvas.width  = 166;\r\n        canvas.height = 166; \r\n        ctx = canvas.getContext(\"2d\");\r\n        cw = ctx.canvas.width;\r\n        ch = ctx.canvas.height;\r\n        start = 4.72;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.progressSim();\r\n    }\r\n\r\n    drawCircle(x, y, r, start, step) {\r\n        ctx.clearRect(0, 0, cw, ch);\r\n        ctx.lineWidth = 10;\r\n        ctx.strokeStyle = \"#3f51b5\";\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, r, start, step, false);\r\n        ctx.stroke();\r\n    }\r\n\r\n    progressSim() {\r\n        if (this.props.isTimerPlayed) {\r\n            if (this.props.timerState === \"Session\") { \r\n                this.setState({\r\n                    difference: ((((this.props.initialSessionLength * 60) - this.props.sessionLength) / (this.props.initialSessionLength * 60)) * Math.PI * 2 * 10).toFixed(2)\r\n                }, function() {\r\n                    this.drawCircle(83, 83, 65, start, this.state.difference / 10 + start)\r\n                    if (((((this.props.initialSessionLength * 60) - this.props.sessionLength) / (this.props.initialSessionLength * 60)) * Math.PI * 2 * 10) === this.props.initialSessionLength * 60) {\r\n                        this.setState({\r\n                            difference: 0\r\n                        }, this.drawCircle(83, 83, 65, start, 0 + start))\r\n                    }\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    difference: ((((this.props.initialBreakLength * 60) - this.props.breakLength) / (this.props.initialBreakLength * 60)) * Math.PI * 2 * 10).toFixed(2)\r\n                }, function() {\r\n                    this.drawCircle(83, 83, 65, start, this.state.difference / 10 + start)\r\n                    if (((((this.props.initialBreakLength * 60) - this.props.breakLength) / (this.props.initialBreakLength * 60)) * Math.PI * 2 * 10) === this.props.initialBreakLength * 60) {\r\n                        this.setState({\r\n                            difference: 0\r\n                        }, this.drawCircle(83, 83, 65, start, 0 + start))\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            if (this.state.difference !== 0) {\r\n                this.drawCircle(83, 83, 65, start, this.state.difference / 10 + start)\r\n            } else {\r\n                this.drawCircle(83, 83, 65, start, 0 + start)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <canvas ref={this.canvas} style={loaderStyle} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\nimport Timer from './Timer';\r\nimport soundfile from '../assets/alert.mp3';\r\n\r\nconst fabButtonStyles = {\r\n    height: '2.8rem',\r\n    width: '2.8rem',\r\n    minHeight: '2.8rem',\r\n    fontSize: '1.6rem',\r\n    fontWeight: '500'\r\n}\r\n\r\nconst resetButtonStyle = {\r\n    marginTop: '2rem',\r\n    fontSize: '1.4rem'\r\n}\r\n\r\nlet timer;\r\nconst alert = () => {\r\n    const audio = new Audio(soundfile);\r\n    audio.play();\r\n}\r\n\r\n\r\nclass Panel extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            breakLength: 300,\r\n            sessionLength: 1500,\r\n            initialSessionLength: 25,\r\n            initialBreakLength: 5,\r\n            isTimerPlayed: false,\r\n            timerState: 'Session'\r\n        }\r\n        this.toggleTimer = this.toggleTimer.bind(this);\r\n        this.toggleSession = this.toggleSession.bind(this);\r\n        this.resetTimer = this.resetTimer.bind(this);\r\n    }\r\n    addMinute(prop) {\r\n        if(this.state.isTimerPlayed === false) {\r\n            if (prop === 'break') {\r\n                this.setState({\r\n                    breakLength: (this.state.initialBreakLength) * 60 + 60,\r\n                    initialBreakLength: this.state.initialBreakLength + 1\r\n                }, this.resetTimer)\r\n            } else {\r\n                this.setState({\r\n                    sessionLength: (this.state.initialSessionLength) * 60 + 60,\r\n                    initialSessionLength: this.state.initialSessionLength + 1\r\n                }, this.resetTimer)\r\n            }\r\n        } else return\r\n    }\r\n\r\n    subtractMinute(prop) {\r\n        if(this.state.isTimerPlayed === false) {\r\n            if (this.state.breakLength <= 0 && this.state.initialBreakLength <= 0 && prop === 'break') {\r\n                this.setState({\r\n                    breakLength: 0,\r\n                    initialBreakLength: 0\r\n                })\r\n            } \r\n            else if (this.state.sessionLength <= 0 && this.state.initialSessionLength <= 0 && prop === 'session') {\r\n                    this.setState({\r\n                        sessionLength: 0,\r\n                        initialSessionLength: 0\r\n                    }, this.resetTimer)\r\n            } else {\r\n                if (prop === 'break') {\r\n                    this.setState({\r\n                        breakLength: (this.state.initialBreakLength) * 60 - 60,\r\n                        initialBreakLength: this.state.initialBreakLength -1\r\n                    }, this.resetTimer)\r\n                } else {\r\n                    this.setState({\r\n                        sessionLength: (this.state.initialSessionLength) * 60 - 60,\r\n                        initialSessionLength: this.state.initialSessionLength - 1\r\n                    }, this.resetTimer)\r\n                }\r\n            }\r\n        } else return\r\n    }\r\n\r\n    toggleTimer(isTimerPlayed) {\r\n        this.setState({\r\n            isTimerPlayed: !isTimerPlayed\r\n        })\r\n    }\r\n\r\n    playAlert() {\r\n        if(this.state.sessionLength === 0 && this.state.timerState === 'Session') {\r\n            alert();\r\n        } else if (this.state.breakLength === 0 && this.state.timerState === 'Break') {\r\n            alert();\r\n        }\r\n    }\r\n\r\n    toggleSession() {\r\n        if(this.state.isTimerPlayed === false) {\r\n            timer = setInterval(() => {\r\n                if (this.state.sessionLength > 0) {\r\n                    this.setState({\r\n                        sessionLength: this.state.sessionLength - 1,\r\n                        timerState: 'Session'\r\n                    }, this.playAlert)\r\n                }\r\n                else if (this.state.sessionLength <= 0 && this.state.breakLength > 0) {\r\n                    this.setState({\r\n                        breakLength: this.state.breakLength - 1,\r\n                        timerState: 'Break'\r\n                    }, this.playAlert)\r\n                } else {\r\n                    this.setState({\r\n                        sessionLength: this.state.initialSessionLength * 60 ,\r\n                        breakLength: this.state.initialBreakLength * 60,\r\n                        timerState: 'Session'\r\n                    }, this.playAlert)\r\n                }\r\n        }, 1000)\r\n        } else {\r\n            clearInterval(timer);\r\n        }\r\n    }\r\n\r\n    resetTimer() {\r\n        this.setState({\r\n            isTimerPlayed: false,\r\n            timerState: 'Session',\r\n            sessionLength: this.state.initialSessionLength * 60,\r\n            breakLength: this.state.initialBreakLength * 60\r\n        })\r\n        clearInterval(timer);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container justify='center' className=\"a\">\r\n                <Grid container alignItems='center' className=\"panel\">\r\n                    <Grid item sm>\r\n                        <Grid container direction='column'>\r\n                            <Grid item sm style={{paddingBottom: '1rem'}}>Break Length</Grid>\r\n                            <Grid item sm>\r\n                                <Grid container>\r\n                                    <Grid item sm><Fab style={fabButtonStyles} onClick={() => this.addMinute('break')}>+</Fab></Grid>\r\n                                    <Grid item sm>{this.state.initialBreakLength}</Grid>\r\n                                    <Grid item sm><Fab style={fabButtonStyles} onClick={() => this.subtractMinute('break')}>-</Fab></Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item sm >\r\n                        <Timer toggleTimer={this.toggleTimer} sessionLength={this.state.sessionLength} breakLength={this.state.breakLength} isTimerPlayed={this.state.isTimerPlayed} timerState={this.state.timerState} toggleSession={this.toggleSession} toggleBreak={this.toggleBreak} initialSessionLength={this.state.initialSessionLength} initialBreakLength={this.state.initialBreakLength}/>\r\n                    </Grid>\r\n                    <Grid item sm>\r\n                        <Grid container direction='column'>\r\n                            <Grid item sm style={{paddingBottom: '1rem'}}>Session Length</Grid>\r\n                            <Grid item sm>\r\n                                <Grid container>\r\n                                    <Grid item sm><Fab style={fabButtonStyles} onClick={() => this.addMinute('session')}>+</Fab></Grid>\r\n                                    <Grid item sm>{this.state.initialSessionLength}</Grid>\r\n                                    <Grid item sm><Fab style={fabButtonStyles} onClick={() => this.subtractMinute('session')}>-</Fab></Grid>\r\n                                </Grid>   \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button style={resetButtonStyle}variant=\"contained\" size=\"medium\" color=\"primary\" onClick={this.resetTimer}>reset</Button> \r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Panel;","import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\n\r\nconst headerStyles = {\r\n    position: 'relative',\r\n    borderTopLeftRadius: '.5rem',\r\n    borderTopRightRadius: '.5rem',\r\n    height: '4rem',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: '1.8rem',\r\n    fontWeight: '500',\r\n    color: 'white'\r\n}\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <AppBar style={headerStyles}>Pomodoro Clock</AppBar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","export default function(time) {\r\n    if ( Math.floor(time % 60) < 10) {\r\n        return `${Math.floor(time / 60)}:0${Math.floor(time % 60)}`\r\n    } else {\r\n        return `${Math.floor(time / 60)}:${Math.floor(time % 60)}`\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Loader from './Loader';\r\nimport displayer from '../utils/displayer';\r\n\r\nconst timerStyle = {\r\n    width: '16.6rem',\r\n    height: '16.6rem',\r\n    color: '#3f51b5',\r\n    fontSize: '2.5rem',\r\n    cursor: 'pointer'\r\n}\r\n\r\nclass Timer extends Component {\r\n    \r\n    componentWillMount(){\r\n        this.setState({\r\n            sessionLength: this.props.sessionLength,\r\n            breakLength: this.props.breakLength\r\n        })\r\n    }\r\n\r\n    displayTime(timerState) {\r\n        let currentTime;\r\n        if (timerState === 'Session') {\r\n            currentTime = displayer(this.props.sessionLength);\r\n            return currentTime\r\n        } else {\r\n            currentTime = displayer(this.props.breakLength);\r\n            return currentTime\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container style={timerStyle} direction='column' justify='center' alignItems='center' onClick={() => {\r\n                this.props.toggleTimer(this.props.isTimerPlayed);\r\n                console.log(`Is timer running ? ${!this.props.isTimerPlayed}`);\r\n                this.props.toggleSession();\r\n            }}>\r\n                <Loader initialSessionLength={this.props.initialSessionLength} initialBreakLength={this.props.initialBreakLength} timerState={this.props.timerState} isTimerPlayed={this.props.isTimerPlayed} sessionLength={this.props.sessionLength} breakLength={this.props.breakLength}/>\r\n                <div style={{zIndex: 2}}>{this.props.timerState}</div>\r\n                <div style={{zIndex: 2}}>{this.displayTime(this.props.timerState)}</div>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer;","import React, { Component } from 'react';\r\nimport Header from '../components/Header';\r\nimport Panel from '../components/Panel';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst containerStyles = {\r\n    backgroundColor: 'white',\r\n    width: '50rem',\r\n    height: '33rem',\r\n    borderRadius: '.5rem',\r\n    boxShadow: '0 1rem 2rem rgba(0, 0, 0, 0.555)',\r\n    fontSize: '1.6rem',\r\n    fontWeight: '500',\r\n    color: '#282c34'\r\n}\r\n\r\nclass Container extends Component {\r\n\r\n    render() {\r\n        return (\r\n                <Grid style={containerStyles} container direction='column' justify=\"flex-start\">\r\n                    <Grid item>\r\n                        <Header />\r\n                    </Grid>\r\n                    <Grid item sm style={{marginTop: '4rem'}}>\r\n                        <Panel />\r\n                    </Grid>\r\n                </Grid>\r\n        );\r\n    }\r\n}\r\nexport default Container;","import React, { Component } from 'react';\r\nimport Container from './components/Container';\r\n\r\nconst appStyles = {\r\n  textAlign: 'center',\r\n  backgroundColor: '#282c34',\r\n  minHeight: '100vh',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'center'\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div style={appStyles}>\r\n        <Container />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/alert.cbc0b859.mp3\";"],"sourceRoot":""}